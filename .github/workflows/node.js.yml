# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Angular CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Angular Build
    runs-on: ubuntu-latest
    env: 
        node: 18.x

    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node }}
          cache: 'npm'
      - name: Install Dependencys
        run: npm ci
      - name: Build project
        run: npm run build --if-present
      - name: Archive production artifact
        uses: actions/upload-artifact@main
        with:
          name: dist_dogger
          path: dist
    
  deploy:
    name: Angular Deploy
    needs: build
    runs-on: ubuntu-latest
    env: 
      servername: ${{ secrets.FTP_SERVERNAME }}
      username: ${{ secrets.FTP_USERNAME }}
      password: ${{ secrets.FTP_PASSWORD }}
    steps:
      - name: Se valida la contraseña
        if: ${{ env.password == '' || env.password == null}}
        run: echo "La contraseña esta vacìa"
      - name: Se valida el nombre del usuario
        if: ${{env.username == '' || env.password == null}}
        run: echo "El usuario esta vacio"
      - name: Se valida el servidor
        if: ${{ env.servername == '' || env.servername == null}}
        run: echo "El nombre del servidor esta vacio"
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download Artifact
        uses: actions/download-artifact@main
        with:
          name: dist_dogger
          path: dist
      - name: Sync files to hosting
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ env.servername }}
          username: ${{ env.username }}
          password: ${{ env.password }}
          local-dir: ./dist/dogger/browser/
          dangerous-clean-slate: true
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            fileToExclude.txt
            .vscode/*
            applications/*

